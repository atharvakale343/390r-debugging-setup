CBoolPair
Init
SetTrueTrue
SetVal_as_Defined
CUncopyable
operator== call:[sizeof]
operator!=
IUnknown
BOOLToBool call:[return] noreturn:[return]
BoolToVARIANT_BOOL call:[return] noreturn:[return]
VARIANT_BOOLToBool call:[return] noreturn:[return]
IsCreated call:[return]
CBaseEvent
CBaseEvent call:[Close] noreturn:[Close]
Close call:[Event_Close] noreturn:[Event_Close]
Set call:[Event_Set] noreturn:[Event_Set]
Reset call:[Event_Reset] noreturn:[Event_Reset]
Lock call:[Event_Wait] noreturn:[Event_Wait]
Create call:[ManualResetEvent_Create] noreturn:[ManualResetEvent_Create]
CreateIfNotCreated_Reset call:[IsCreated,ManualResetEvent_CreateNotSignaled,Reset] noreturn:[ManualResetEvent_CreateNotSignaled,Reset]
Create call:[AutoResetEvent_CreateNotSignaled] noreturn:[AutoResetEvent_CreateNotSignaled]
CreateIfNotCreated_Reset call:[AutoResetEvent_CreateNotSignaled,IsCreated,Reset] noreturn:[AutoResetEvent_CreateNotSignaled,Reset]
_CSemaphore
Close call:[Semaphore_Close] noreturn:[Semaphore_Close]
Create call:[Semaphore_Create] noreturn:[Semaphore_Create]
OptCreateInit call:[Semaphore_OptCreateInit] noreturn:[Semaphore_OptCreateInit]
Release call:[Semaphore_ReleaseN] noreturn:[Semaphore_ReleaseN]
Release call:[Semaphore_ReleaseN] noreturn:[Semaphore_ReleaseN]
Lock call:[Semaphore_Wait] noreturn:[Semaphore_Wait]
_CCriticalSection call:[CriticalSection_Init] noreturn:[CriticalSection_Init]
Enter call:[CriticalSection_Enter] noreturn:[CriticalSection_Enter]
Leave call:[CriticalSection_Leave] noreturn:[CriticalSection_Leave]
Unlock call:[Leave] noreturn:[Leave]
CCriticalSectionLock call:[Enter] noreturn:[Enter]
CCriticalSectionLock call:[Unlock] noreturn:[Unlock]
CSynchro
CSynchro call:[pthread_cond_destroy,pthread_mutex_destroy] noreturn:[pthread_cond_destroy]
Create call:[pthread_cond_init,pthread_mutex_init]
Enter call:[pthread_mutex_lock] noreturn:[pthread_mutex_lock]
Leave call:[pthread_mutex_unlock] noreturn:[pthread_mutex_unlock]
WaitCond call:[pthread_cond_wait] noreturn:[pthread_cond_wait]
LeaveAndSignal call:[pthread_cond_broadcast,pthread_mutex_unlock,return] noreturn:[return]
CBaseHandle_WFMO
operatorNWindows::NSynchronization::CBaseHandle_WFMO*
CBaseEvent_WFMO call:[Close] noreturn:[Close]
Close
Create
Set call:[Enter,LeaveAndSignal] noreturn:[LeaveAndSignal]
Reset call:[Enter,Leave] noreturn:[Leave]
IsSignaledAndUpdate
Create call:[Create] noreturn:[Create]
Create call:[Create] noreturn:[Create]
CreateIfNotCreated_Reset call:[Create] noreturn:[Create]
CSemaphore_WFMO
Close
Create
Release call:[Enter,Leave,LeaveAndSignal,return] noreturn:[LeaveAndSignal,return]
IsSignaledAndUpdate
_CThread
IsCreated call:[return]
Close call:[Thread_Close] noreturn:[Thread_Close]
Wait_Close call:[Thread_Wait_Close] noreturn:[Thread_Wait_Close]
Create call:[Thread_Create] noreturn:[Thread_Create]
Create_With_Affinity call:[Thread_Create_With_Affinity] noreturn:[Thread_Create_With_Affinity]
Create_With_CpuSet call:[Thread_Create_With_CpuSet] noreturn:[Thread_Create_With_CpuSet]
IsPathSepar call:[return] noreturn:[return]
IsPathSepar call:[return] noreturn:[return]
MyStringLen
MyStringCopy
MyStpCpy
MyStringLen
MyStringCopy
MyStringCat call:[MyStringCopy,MyStringLen] noreturn:[MyStringCopy]
MyCharUpper_Ascii call:[return]
MyCharLower_Ascii call:[return]
MyCharLower_Ascii call:[return]
MyCharUpper call:[return,towupper] noreturn:[towupper]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
operator+ call:[AString] noreturn:[AString]
AString
Len
IsEmpty
Empty
operatorconstchar*
Ptr_non_const
Ptr
Ptr
RightPtr
Back
ReplaceOneCharAtPos
GetBuf
GetBuf call:[ReAlloc2] noreturn:[ReAlloc2]
GetBuf_SetEnd call:[ReAlloc2] noreturn:[ReAlloc2]
ReleaseBuf_SetLen
ReleaseBuf_SetEnd
ReleaseBuf_CalcLen call:[MyStringLen] noreturn:[MyStringLen]
operator+= call:[Grow_1] noreturn:[Grow_1]
Add_PathSepar call:[operator+=] noreturn:[operator+=]
Mid call:[AString] noreturn:[AString]
Left call:[AString] noreturn:[AString]
MakeLower_Ascii call:[MyStringLower_Ascii] noreturn:[MyStringLower_Ascii]
IsEqualTo call:[strcmp]
IsEqualTo_Ascii_NoCase call:[StringsAreEqualNoCase_Ascii] noreturn:[StringsAreEqualNoCase_Ascii]
IsPrefixedBy call:[IsString1PrefixedByString2] noreturn:[IsString1PrefixedByString2]
IsAscii call:[Len]
Find call:[FindCharPosInString] noreturn:[FindCharPosInString]
Find call:[FindCharPosInString]
ReverseFind_Dot call:[ReverseFind] noreturn:[ReverseFind]
Find call:[Find] noreturn:[Find]
Trim call:[TrimLeft,TrimRight] noreturn:[TrimLeft]
DeleteBack
DeleteFrom
Wipe_and_Empty call:[memset,sizeof]
AString_Wipe
AString_Wipe call:[Wipe_and_Empty] noreturn:[Wipe_and_Empty]
operator== call:[Len,strcmp]
operator== call:[strcmp]
operator== call:[strcmp]
operator!= call:[Len,strcmp]
operator!= call:[strcmp]
operator!= call:[strcmp]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
operator+ call:[UString] noreturn:[UString]
UString
Len
IsEmpty
Empty
operatorconstwchar_t*
Ptr_non_const
Ptr
Ptr
RightPtr
Back
ReplaceOneCharAtPos
GetBuf
GetBuf call:[ReAlloc2] noreturn:[ReAlloc2]
GetBuf_SetEnd call:[ReAlloc2] noreturn:[ReAlloc2]
ReleaseBuf_SetLen
ReleaseBuf_SetEnd
ReleaseBuf_CalcLen call:[MyStringLen] noreturn:[MyStringLen]
operator= call:[return]
operator= call:[Ptr,operator=] noreturn:[operator=]
operator+= call:[Grow_1] noreturn:[Grow_1]
operator+= call:[return]
Add_PathSepar call:[operator+=] noreturn:[operator+=]
operator+= call:[Ptr,operator+=] noreturn:[operator+=]
Mid call:[UString] noreturn:[UString]
Left call:[UString] noreturn:[UString]
MakeLower_Ascii call:[MyStringLower_Ascii] noreturn:[MyStringLower_Ascii]
IsEqualTo call:[StringsAreEqual_Ascii] noreturn:[StringsAreEqual_Ascii]
IsEqualTo_NoCase call:[StringsAreEqualNoCase] noreturn:[StringsAreEqualNoCase]
IsEqualTo_Ascii_NoCase call:[StringsAreEqualNoCase_Ascii] noreturn:[StringsAreEqualNoCase_Ascii]
Compare call:[wcscmp] noreturn:[wcscmp]
IsPrefixedBy call:[IsString1PrefixedByString2] noreturn:[IsString1PrefixedByString2]
IsPrefixedBy_NoCase call:[IsString1PrefixedByString2_NoCase] noreturn:[IsString1PrefixedByString2_NoCase]
IsAscii call:[Len]
Find call:[FindCharPosInString] noreturn:[FindCharPosInString]
Find call:[FindCharPosInString]
ReverseFind_Dot call:[ReverseFind] noreturn:[ReverseFind]
Find call:[Find] noreturn:[Find]
Trim call:[TrimLeft,TrimRight] noreturn:[TrimLeft]
DeleteBack
DeleteFrom
Wipe_and_Empty call:[memset,sizeof]
UString_Wipe
UString_Wipe call:[Wipe_and_Empty] noreturn:[Wipe_and_Empty]
operator== call:[Len,wcscmp]
operator== call:[wcscmp]
operator== call:[wcscmp]
operator!= call:[Len,wcscmp]
operator!= call:[wcscmp]
operator!= call:[wcscmp]
UString2
UString2
Len
IsEmpty
GetRawPtr
Compare call:[wcscmp] noreturn:[wcscmp]
GetBuf call:[ReAlloc2] noreturn:[ReAlloc2]
ReleaseBuf_SetLen
operator!=
operator!=
operator!=
MyMin
MyMax
MyCompare
BoolToInt call:[return] noreturn:[return]
BoolToUInt call:[return] noreturn:[return]
IntToBool call:[return] noreturn:[return]
operator== call:[Size,memcmp,sizeof]
operator!= call:[Size,memcmp,sizeof]
CByteBuffer_Wipe
CByteBuffer_Wipe call:[Wipe] noreturn:[Wipe]
Free
CObjArray
CObjArray
CObjArray
operatorT*
operatorconstT*
Alloc
Free
CObjArray2
CObjArray2
operatorT*
operatorconstT*
Size call:[return]
IsEmpty
SetSize
PropVarEm_Set_UInt32
PropVarEm_Set_UInt64
PropVarEm_Set_FileTime64_Prec
PropVarEm_Set_Bool
CPropVariant
Set_FtPrec
SetAsTimeFrom_FT_Prec call:[Set_FtPrec,operator=] noreturn:[Set_FtPrec]
SetAsTimeFrom_Ft64_Prec call:[Set_FtPrec,operator=] noreturn:[Set_FtPrec]
SetAsTimeFrom_FT_Prec_Ns100 call:[operator=]
Get_Ns100
CPropVariant
CPropVariant
CPropVariant
CPropVariant
CPropVariant
operator= call:[return]
FILETIME_To_UInt64 call:[return]
FILETIME_Clear
FILETIME_IsZero call:[return] noreturn:[return]
FiTime_Clear
PropVariant_SetFrom_UnixTime call:[SetAsTimeFrom_FT_Prec,UnixTime_To_FileTime] noreturn:[SetAsTimeFrom_FT_Prec]
PropVariant_SetFrom_NtfsTime call:[SetAsTimeFrom_FT_Prec] noreturn:[SetAsTimeFrom_FT_Prec]
PropVariant_SetFrom_FiTime call:[FiTime_To_FILETIME_ns100,SetAsTimeFrom_FT_Prec_Ns100] noreturn:[SetAsTimeFrom_FT_Prec_Ns100]
PropVariant_SetFrom_DosTime call:[DosTime_To_FileTime,LocalFileTimeToFileTime,SetAsTimeFrom_FT_Prec]
CReparseAttr
IsMountPoint
IsSymLink_Win
IsSymLink_WSL
IsRelative_Win
IsRelative_WSL call:[IsEmpty]
CFileBase
CFileBase call:[Close] noreturn:[Close]
my_fstat call:[fstat] noreturn:[fstat]
COutFile
WriteFull call:[write_full]
SetLength_KeepPosition call:[SetLength] noreturn:[SetLength]
DoesDirExist call:[DoesDirExist] noreturn:[DoesDirExist]
DoesDirExist_FollowLink call:[DoesDirExist] noreturn:[DoesDirExist]
CFileInfoBase call:[ClearBase] noreturn:[ClearBase]
GetPosixAttrib
GetWinAttrib call:[Get_WinAttribPosix_From_PosixMode] noreturn:[Get_WinAttribPosix_From_PosixMode]
IsDir call:[S_ISDIR] noreturn:[S_ISDIR]
SetAsDir
SetAsFile
IsReadOnly
IsPosixLink call:[S_ISLNK] noreturn:[S_ISLNK]
IsOsSymLink call:[IsPosixLink] noreturn:[IsPosixLink]
Find_FollowLink call:[Find] noreturn:[Find]
CEnumerator
DirEntry_IsDir call:[Fill_FileInfo,IsDir] noreturn:[IsDir]
CMidBuffer
CMidBuffer call:[MyFree] noreturn:[MyFree]
Free call:[MyFree]
IsAllocated
operatorchar*
operatorconstchar*
Size
Alloc call:[MyAlloc,MyFree]
AllocAtLeast call:[MyAlloc,MyFree]
CAlignedBuffer
CAlignedBuffer global:[g_AlignedAlloc] call:[Free] noreturn:[Free]
CAlignedBuffer global:[g_AlignedAlloc] call:[Alloc]
Free global:[g_AlignedAlloc] call:[Free]
IsAllocated
operatorchar*
operatorconstchar*
Size
Alloc global:[g_AlignedAlloc] call:[Alloc,Free]
AllocAtLeast global:[g_AlignedAlloc] call:[Alloc,Free]
GetUnicodeString
GetUnicodeString
GetUnicodeString call:[MultiByteToUnicodeString] noreturn:[MultiByteToUnicodeString]
GetUnicodeString call:[MultiByteToUnicodeString] noreturn:[MultiByteToUnicodeString]
GetUnicodeString call:[MultiByteToUnicodeString] noreturn:[MultiByteToUnicodeString]
GetUnicodeString call:[MultiByteToUnicodeString] noreturn:[MultiByteToUnicodeString]
GetUnicodeString
GetUnicodeString
GetAnsiString
GetAnsiString
GetAnsiString call:[UString,UnicodeStringToMultiByte] noreturn:[UnicodeStringToMultiByte]
GetAnsiString call:[UnicodeStringToMultiByte] noreturn:[UnicodeStringToMultiByte]
GetOemString call:[UnicodeStringToMultiByte] noreturn:[UnicodeStringToMultiByte]
GetSystemString
GetSystemString
GetSystemString
GetSystemString
GetSystemString call:[UString,UnicodeStringToMultiByte] noreturn:[UnicodeStringToMultiByte]
GetSystemString call:[UnicodeStringToMultiByte] noreturn:[UnicodeStringToMultiByte]
GetSystemString call:[UnicodeStringToMultiByte] noreturn:[UnicodeStringToMultiByte]
Calc_From_Val_Percents_Less100
ParseMtProp call:[ParseMtProp2] noreturn:[ParseMtProp2]
CProp
Clear call:[Clear] noreturn:[Clear]
AreThereNonOptionalProps call:[Size]
AddProp_Ascii call:[AddNew]
Get_NumThreads call:[FindProp,return]
Get_DicSize call:[FindProp]
Get_Lzma_Algo call:[FindProp,GetLevel]
Get_Lzma_DicSize call:[GetLevel,Get_DicSize]
Get_Lzma_MatchFinder_IsBt call:[FindProp,GetLevel,return] noreturn:[return]
Get_Lzma_Eos call:[FindProp,VARIANT_BOOLToBool] noreturn:[VARIANT_BOOLToBool]
Are_Lzma_Model_Props_Defined call:[FindProp]
Get_Lzma_NumThreads call:[Get_Lzma_Algo,Get_NumThreads]
Get_Xz_NumThreads call:[Get_Lzma_Algo,Get_NumThreads]
GetProp_BlockSize call:[FindProp]
Get_Xz_BlockSize call:[GetProp_BlockSize,Get_Lzma_DicSize,MyMax,MyMin]
Get_BZip2_NumThreads call:[Get_NumThreads,return]
Get_BZip2_BlockSize call:[FindProp,GetLevel]
Get_Ppmd_MemSize call:[FindProp,GetLevel]
AddProp_Level call:[AddProp32] noreturn:[AddProp32]
AddProp_NumThreads call:[AddProp32] noreturn:[AddProp32]
AddProp_EndMarker_if_NotFound call:[AddPropBool,FindProp] noreturn:[AddPropBool]
AddProp_BlockSize2 call:[AddNew,FindProp]
Clear call:[Clear,Empty] noreturn:[Empty]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
StringToBstr call:[SysAllocString,return]
CMyComBSTR
CMyComBSTR call:[SysFreeString] noreturn:[SysFreeString]
operator&
operatorconstwchar_t*
Wipe_and_Free call:[Empty,SysStringLen,memset,sizeof] noreturn:[Empty]
CMyComBSTR call:[SysAllocString] noreturn:[SysAllocString]
operator= call:[SysAllocString,SysFreeString]
Len call:[SysStringLen] noreturn:[SysStringLen]
MyCopy call:[SysAllocStringLen,SysStringLen] noreturn:[SysAllocStringLen]
Empty call:[SysFreeString]
CMyComBSTR_Wipe
CMyComBSTR_Wipe call:[Wipe_and_Free] noreturn:[Wipe_and_Free]
CMyUnknownImp
CMyUnknownImp
Init
QueryInterface global:[IID_IInStream,IID_ISequentialInStream,IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
QueryInterface global:[IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
Init
Init call:[Init,Size] noreturn:[Init]
QueryInterface global:[IID_IInStream,IID_ISequentialInStream,IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
Create_BufInStream_WithNewBuffer call:[Create_BufInStream_WithNewBuffer,Size] noreturn:[Create_BufInStream_WithNewBuffer]
CByteDynBuffer
CByteDynBuffer call:[Free] noreturn:[Free]
GetCapacity
operatorchar*
operatorconstchar*
CDynBufSeqOutStream
Init
GetSize
GetBuffer
UpdateSize
QueryInterface global:[IID_ISequentialOutStream,IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
Init
GetPos
QueryInterface global:[IID_ISequentialOutStream,IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
SetStream
Init
GetSize
QueryInterface global:[IID_ISequentialOutStream,IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
CCachedInStream
CCachedInStream call:[Free] noreturn:[Free]
QueryInterface global:[IID_IInStream,IID_ISequentialInStream,IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
GetNumSystemThreads call:[return]
InitST
GetNumProcessThreads
CpuZero
CpuSet
IsCpuSet call:[return]
SetProcAffinity
CBenchInfo
GetUnpackSizeSpeed call:[GetSpeed] noreturn:[GetSpeed]
Get_UnpackSize_Full
Init
SetSum
SetComplexCommandsMs global:[kComplexInCommands]
Benchmark_GetUsage_Percents global:[kBenchmarkUsageMult] call:[return]
CBaseRandomGenerator call:[Init] noreturn:[Init]
Init
GetRnd
RandGen call:[GetRnd]
GetVal
GetLen call:[GetVal] noreturn:[GetVal]
GenerateSimpleRandom call:[GetRnd,Size,rg] noreturn:[GetRnd]
GenerateLz call:[GetLen,GetRnd,GetVal,Size,rg] noreturn:[GetRnd]
QueryInterface global:[IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
Init
WasFinished
Read call:[memcpy,return] noreturn:[memcpy,return]
Init
InitCrc
Calc call:[CrcUpdate] noreturn:[CrcUpdate]
GetPos
QueryInterface global:[IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
Write call:[Calc,Size,memcpy,return] noreturn:[Calc,memcpy,return]
QueryInterface global:[IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
CCrcOutStream
Init
Calc call:[CrcUpdate] noreturn:[CrcUpdate]
Write call:[Calc,return] noreturn:[Calc,return]
GetTimeCount call:[gettimeofday,return,time]
GetFreq
Init call:[Update]
Update call:[times]
GetUserTime call:[Update]
GetUserFreq call:[return,sysconf] noreturn:[sysconf]
SetResult call:[lock]
GetResult call:[lock]
SetStartTime call:[GetFreq,GetTimeCount,GetUserFreq,Init] noreturn:[Init]
SetFinishTime call:[GetTimeCount,GetUserTime] noreturn:[GetUserTime]
CBenchProgressInfo
QueryInterface global:[IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
SetRatioInfo call:[GetResult,SetDecodeResult,SetEncodeResult,SetFinishTime,SetResult] noreturn:[SetDecodeResult,SetEncodeResult,SetResult]
GetLogSize
GetLogSize_Sub global:[kSubBits] call:[GetLogSize,return]
Get_UInt64_from_double call:[return]
MyMultDiv64 call:[Get_UInt64_from_double] noreturn:[Get_UInt64_from_double]
GetUsage global:[kBenchmarkUsageMult] call:[Get_UInt64_from_double] noreturn:[Get_UInt64_from_double]
GetRatingPerUsage call:[Get_UInt64_from_double] noreturn:[Get_UInt64_from_double]
GetSpeed call:[MyMultDiv64] noreturn:[MyMultDiv64]
CBenchProps
GeComprCommands
GeDecomprCommands call:[return] noreturn:[return]
SetLzmaCompexity
GetCompressRating global:[kBenchMinDicLogSize,kSubBits] call:[GetLogSize_Sub,MyMultDiv64] noreturn:[MyMultDiv64]
GetDecompressRating call:[MyMultDiv64] noreturn:[MyMultDiv64]
GetRating_LzmaEnc call:[GetCompressRating,SetLzmaCompexity] noreturn:[GetCompressRating]
GetRating_LzmaDec call:[GetDecompressRating,SetLzmaCompexity] noreturn:[GetDecompressRating]
NeedAffinity
CreateThread_WithAffinity call:[Create,Create_With_CpuSet,GetAffinityMask,NeedAffinity] noreturn:[Create,Create_With_CpuSet]
CAffinityMode
SetLevels
GetAffinityMask
CBenchSyncCommon
Set_Key_and_IV call:[SetInitVector,SetKey,sizeof] noreturn:[SetInitVector]
CEncoderInfo
EncodeThreadFunction call:[Encode,Set,SetResult] noreturn:[Encode,SetResult]
DecodeThreadFunction call:[Decode]
CreateEncoderThread call:[Create,CreateThread_WithAffinity,IsCreated,return] noreturn:[Create,CreateThread_WithAffinity,return]
CreateDecoderThread call:[CreateThread_WithAffinity,return] noreturn:[return]
GetBenchCompressedSize global:[kCompressedAdditionalSize]
Generate global:[IID_ICompressSetCoderProperties,IID_ICompressWriteCoderProperties,IID_ICryptoSetPassword] call:[Alloc,AreThereNonOptionalProps,Code,CrcCalc,CryptoSetPassword,Filter,GenerateLz,GenerateSimpleRandom,GetBenchCompressedSize,Init,IsAllocated,QueryInterface,SetCoderProps_DSReduce_Aff,Size,WriteCoderProperties,memset,return,sizeof] noreturn:[Filter,GenerateLz,GenerateSimpleRandom,return]
My_FilterBench call:[Filter]
Encode global:[IID_ICryptoProperties] call:[Calc,CheckBreak,Code,Generate,Init,InitCrc,Lock,My_FilterBench,QueryInterface,Release,Set,SetStartTime,Set_Key_and_IV,WasFinished,memcpy,return] noreturn:[Calc,Lock,SetStartTime,return]
Decode global:[IID_ICompressGetInStreamProcessedSize,IID_ICompressSetCoderMt,IID_ICompressSetCoderProperties,IID_ICompressSetDecoderProperties2,IID_ICompressSetFinishMode,IID_ICryptoProperties,IID_ICryptoSetPassword] call:[BoolToUInt,Calc,CheckBreak,Code,CryptoSetPassword,GetInStreamProcessedSize,GetPos,Init,My_FilterBench,QueryInterface,Release,SetCoderProps,SetDecoderProperties2,SetFinishMode,SetNumberOfThreads,Set_Key_and_IV,Size,WasFinished,memcpy,return,sizeof] noreturn:[Calc,QueryInterface,memcpy,return]
CBenchEncoders
CBenchEncoders
GetNumIterations call:[return] noreturn:[return]
CBenchThreadsFlusher
CBenchThreadsFlusher call:[StartAndWait] noreturn:[StartAndWait]
StartAndWait call:[IsCreated,Set,Wait_Close]
SetPseudoRand
MethodBench global:[g_CrcTable,k_LZMA] call:[AddProp_NumThreads,CheckBreak,CrcCalc,Create,CreateCoder_Id,CreateCoder_Index,CreateDecoderThread,CreateEncoderThread,Decode,Encode,FindMethod_Index,GeComprCommands,GeDecomprCommands,GetNumIterations,Get_Lzma_NumThreads,Get_NumThreads,Lock,NeedAffinity,SetDecodeResult,SetEncodeResult,SetFinishTime,SetPseudoRand,SetStartTime,StartAndWait,Wait_Close,encodersSpec,return,sizeof] noreturn:[AddProp_NumThreads,CrcCalc,SetStartTime,return]
GetDictSizeFromLog call:[return]
GetLZMAUsage
GetBenchMemoryUsage global:[kAdditionalSize] call:[GetBenchCompressedSize,GetLZMAUsage,return]
GetBenchMemoryUsage_Hash call:[return]
CCrcInfo_Base
Generate call:[Alloc,IsAllocated,RandGen,memcpy,return] noreturn:[RandGen,memcpy,return]
CrcProcess call:[CheckBreak,Final,GetDigestSize,Init,Update,memset,return,sizeof,while] noreturn:[return]
CountCpuFreq
Wait_If_Created call:[IsCreated,Wait_Close] noreturn:[Wait_Close]
FreqThreadFunction global:[g_BenchCpuFreqTemp] call:[CheckBreak,CountCpuFreq] noreturn:[CountCpuFreq]
CFreqThreads
WaitAll call:[Wait_If_Created]
CFreqThreads call:[WaitAll]
CreateThread call:[Create,CreateThread_WithAffinity,IsCreated,return] noreturn:[Create,CreateThread_WithAffinity,return]
CCrcInfo
Process global:[k_Crc_CreateLocalBuf_For_File] call:[CrcProcess,Generate,Lock,Set]
CrcThreadFunction call:[Process]
CCrcThreads
CCrcThreads call:[StartAndWait]
StartAndWait call:[Set,Wait_If_Created]
CrcCalc1 global:[g_CrcTable] call:[return] noreturn:[return]
CrcInternalTest call:[Alloc,CrcCalc,CrcCalc1,IsAllocated,RandGen]
PrintNumber call:[ConvertUInt64ToString,Print,memset,sizeof,strlen] noreturn:[Print]
PrintRating call:[PrintNumber] noreturn:[PrintNumber]
PrintPercents call:[PrintNumber] noreturn:[PrintNumber]
PrintChars call:[Print,memset] noreturn:[Print]
PrintSpaces call:[PrintChars] noreturn:[PrintChars]
PrintUsage call:[Benchmark_GetUsage_Percents,PrintNumber] noreturn:[PrintNumber]
PrintResults global:[kBenchmarkUsageMult,kFieldSize_EU,kFieldSize_EUAndEffec,kFieldSize_Effec,kFieldSize_RU,kFieldSize_Rating,kFieldSize_Usage] call:[PrintPercents,PrintRating,PrintSpaces,PrintUsage] noreturn:[PrintPercents,PrintSpaces]
Generate_From_BenchInfo call:[GetRatingPerUsage,GetUnpackSizeSpeed,GetUsage] noreturn:[GetRatingPerUsage]
Mult_For_Weight
Update_With_Res
PrintResults global:[kFieldSize_Speed] call:[Generate_From_BenchInfo,Mult_For_Weight,PrintNumber,PrintResults,PrintSpaces,Update_With_Res] noreturn:[PrintNumber,PrintResults,PrintSpaces,Update_With_Res]
PrintTotals global:[kFieldSize_Speed] call:[PrintNumber,PrintResults,PrintSpaces] noreturn:[PrintNumber,PrintResults,PrintSpaces]
PrintHex call:[ConvertUInt64ToHex]
GetProcessThreadsInfo call:[Add_UInt32,GetNumProcessThreads,GetNumSystemThreads,IsCpuSet,PrintHex] noreturn:[Add_UInt32,PrintHex]
PrintRequirements call:[Print,PrintNumber] noreturn:[Print,PrintNumber]
CBenchCallbackToPrint
Init call:[Init] noreturn:[Init]
SetFreq call:[return] noreturn:[return]
SetEncodeResult call:[CheckBreak,GetCompressRating,NewLine,PrintResults,return] noreturn:[NewLine,return]
SetDecodeResult global:[kSep] call:[CheckBreak,GetDecompressRating,Print,PrintResults,PrintSpaces,return] noreturn:[Print,PrintResults,PrintSpaces,return]
Print call:[Print] noreturn:[Print]
NewLine call:[NewLine] noreturn:[NewLine]
PrintLeft call:[MyStringLen,Print,PrintSpaces] noreturn:[PrintSpaces]
PrintRight call:[MyStringLen,Print,PrintSpaces] noreturn:[Print,PrintSpaces]
TotalBench global:[g_Bench,kFieldSize_Name,kFilterUnpackSize] call:[IsString1PrefixedByString2,MethodBench,NewLine,ParseMethodFromPROPVARIANT,PrintLeft,UString,return,sizeof] noreturn:[NewLine,return]
CFreqBench
FreqBench global:[g_BenchCpuFreqTemp,kNumFreqCommands] call:[CheckBreak,CountCpuFreq,CreateThread_WithAffinity,GetSpeed,GetUsage,IsCreated,NeedAffinity,PrintResults,SetFinishTime,SetStartTime,WaitAll,return] noreturn:[return]
CrcBench global:[IID_ICompressSetCoderProperties] call:[CheckBreak,CrcProcess,Create,CreateHasher,CreateThread,FindHashMethod,Generate,GetSpeed,GetUsage,IsCreated,Lock,NeedAffinity,PrintResults,QueryInterface,SetCoderProps,SetFinishTime,SetStartTime,StartAndWait,return] noreturn:[PrintResults,SetFinishTime,return]
TotalBench_Hash global:[g_Hash,kFieldSize_Name,kNumHashDictBits] call:[CrcBench,NewLine,ParseMethodFromPROPVARIANT,PrintLeft,UString,return,sizeof] noreturn:[NewLine,return]
CTempValues
CTempValues
ParseNumberString call:[ConvertStringToUInt64,IsEmpty]
AreSameMethodNames call:[StringsAreEqualNoCase_Ascii] noreturn:[StringsAreEqualNoCase_Ascii]
Print_Usage_and_Threads call:[PrintRequirements] noreturn:[PrintRequirements]
Bench global:[g_Bench,g_BenchCpuFreqTemp,g_Hash,kAdditionalSize,kBenchMinDicLogSize,kBenchmarkUsageMult,kComplexInCommands,kComplexInMs,kFieldSize_EU,kFieldSize_EUAndEffec,kFieldSize_Effec,kFieldSize_Name,kFieldSize_RU,kFieldSize_Rating,kFieldSize_SmallName,kFieldSize_Speed,kFieldSize_TotalSize,kFieldSize_Usage,kNumFreqCommands,kNumHashDictBits,kNumThreadsMax,kOldLzmaDictBits,kSep,k_Crc_CreateLocalBuf_For_File] call:[Add,AddCpuFreq,Alloc,AreSameMethodNames,CheckBreak,ConvertUInt32ToString,ConvertUInt64ToString,CountCpuFreq,CrcBench,CrcInternalTest,DeleteFrom,Empty,Find,FindHashMethod,FreqBench,FreqsFinished,Get,GetAnsiString,GetBenchMemoryUsage,GetBenchMemoryUsage_Hash,GetCompiler,GetDictSizeFromLog,GetFreq,GetLastError_noZero_HRESULT,GetLength,GetLevel,GetNumProcessThreads,GetNumberOfProcessors,GetProcessThreadsInfo,GetRamSize,GetSystemInfoText,GetTimeCount,Get_DicSize,Get_Lzma_DicSize,Init,InitST,IsAllocated,IsEmpty,IsEqualTo,IsEqualTo_Ascii_NoCase,IsPrefixedBy_Ascii_NoCase,MakeLower_Ascii,MethodBench,MyMultDiv64,MyStringLen,NewLine,Open,ParseMethodFromPROPVARIANT,ParseMtProp,ParseNumberString,ParsePropToUInt32,Print,PrintChars,PrintLeft,PrintNumber,PrintRequirements,PrintRight,PrintSpaces,PrintTotals,PrintUsage,Print_Usage_and_Threads,Ptr,ReadFull,SetComplexCommandsMs,SetFreq,SetLevels,SetLzmaCompexity,Size,StringsAreEqualNoCase_Ascii,StringsAreEqual_Ascii,TotalBench,TotalBench_Hash,UString,Update_With_Res,benchMethod,methodName,name,return,sizeof,speedTotals,us2fs,usageTotals] noreturn:[Add,DeleteFrom,GetLastError_noZero_HRESULT,GetNumProcessThreads,GetNumberOfProcessors,MethodBench,NewLine,ParseNumberString,Print,PrintChars,PrintNumber,PrintRight,Print_Usage_and_Threads,SetComplexCommandsMs,SetLzmaCompexity,Size,return]
CMyComPtr < IUnknown >
CMyComPtr < IUnknown > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IUnknown > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IUnknown > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ISequentialOutStream >
CMyComPtr < ISequentialOutStream > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ISequentialOutStream > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ISequentialOutStream > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressCoder >
CMyComPtr < ICompressCoder > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressCoder2 >
CMyComPtr < ICompressCoder2 > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder2 > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder2 > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressFilter >
CMyComPtr < ICompressFilter > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressFilter > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressFilter > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < IHasher >
CMyComPtr < IHasher > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IHasher > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IHasher > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressProgressInfo >
CMyComPtr < ICompressProgressInfo > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressProgressInfo > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressProgressInfo > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressSetCoderProperties >
CMyComPtr < ICompressSetCoderProperties > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetCoderProperties > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetCoderProperties > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressWriteCoderProperties >
CMyComPtr < ICompressWriteCoderProperties > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressWriteCoderProperties > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressWriteCoderProperties > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICryptoSetPassword >
CMyComPtr < ICryptoSetPassword > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICryptoSetPassword > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICryptoSetPassword > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ISequentialInStream >
CMyComPtr < ISequentialInStream > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ISequentialInStream > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ISequentialInStream > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICryptoProperties >
CMyComPtr < ICryptoProperties > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICryptoProperties > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICryptoProperties > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressSetDecoderProperties2 >
CMyComPtr < ICompressSetDecoderProperties2 > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetDecoderProperties2 > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetDecoderProperties2 > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressSetCoderMt >
CMyComPtr < ICompressSetCoderMt > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetCoderMt > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetCoderMt > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressSetFinishMode >
CMyComPtr < ICompressSetFinishMode > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetFinishMode > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressSetFinishMode > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressGetInStreamProcessedSize >
CMyComPtr < ICompressGetInStreamProcessedSize > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressGetInStreamProcessedSize > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressGetInStreamProcessedSize > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
Free
CBuffer < unsigned char >
CBuffer < unsigned char >
CBuffer < unsigned char > call:[memcpy,sizeof]
CBuffer < unsigned char >
operatorT*
operatorconstT*
Size
Alloc call:[Free]
AllocAtLeast call:[Free]
CopyFrom call:[Alloc,memcpy,sizeof] noreturn:[memcpy]
ChangeSize_KeepData call:[MyMin,memcpy,sizeof] noreturn:[memcpy]
Wipe call:[memset,sizeof] noreturn:[memset]
operator= call:[CopyFrom] noreturn:[CopyFrom]
Size call:[Size] noreturn:[Size]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
ClearAndReserve call:[Clear,ClearAndReserve] noreturn:[ClearAndReserve]
CObjectVector < CProp >
CObjectVector < CProp > call:[AddInReserved,ConstructReserve,Size] noreturn:[AddInReserved]
operator= call:[AddInReserved,Clear,Reserve,Size] noreturn:[AddInReserved]
operator+= global:[k_VectorSizeMax] call:[AddInReserved,Reserve,Size] noreturn:[AddInReserved]
operator[]
operator[]
Front call:[operator[]] noreturn:[operator[]]
Front call:[operator[]] noreturn:[operator[]]
Back call:[Back] noreturn:[Back]
Back call:[Back] noreturn:[Back]
MoveToFront call:[MoveToFront] noreturn:[MoveToFront]
Add call:[AddInReserved,ReserveOnePosition] noreturn:[AddInReserved]
AddInReserved call:[AddInReserved,CProp] noreturn:[AddInReserved]
ReserveOnePosition call:[ReserveOnePosition] noreturn:[ReserveOnePosition]
AddInReserved_Ptr_of_new call:[AddInReserved] noreturn:[AddInReserved]
AddNew call:[AddInReserved,ReserveOnePosition]
AddNewInReserved call:[AddInReserved]
Insert call:[CProp,InsertInReserved,ReserveOnePosition] noreturn:[InsertInReserved]
InsertNew call:[InsertInReserved,ReserveOnePosition]
CObjectVector < CProp > call:[Size,delete]
ClearAndFree call:[Clear,ClearAndFree] noreturn:[ClearAndFree]
Clear call:[Clear,Size,delete] noreturn:[Clear]
DeleteFrom call:[DeleteFrom,Size,delete] noreturn:[DeleteFrom]
DeleteFrontal call:[DeleteFrontal,delete] noreturn:[DeleteFrontal]
DeleteBack call:[Back,DeleteBack,delete] noreturn:[DeleteBack]
Delete call:[Delete,delete] noreturn:[Delete]
FindInSorted call:[Compare,Size,return]
AddToUniqueSorted call:[Compare,Insert,Size]
Sort call:[Sort] noreturn:[Sort]
CompareObjectItems call:[Compare,return] noreturn:[Compare]
Sort call:[Sort] noreturn:[Sort]
Size call:[Size] noreturn:[Size]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
ClearAndReserve call:[Clear,ClearAndReserve] noreturn:[ClearAndReserve]
CObjectVector < CProperty >
CObjectVector < CProperty > call:[AddInReserved,ConstructReserve,Size] noreturn:[AddInReserved]
operator= call:[AddInReserved,Clear,Reserve,Size] noreturn:[AddInReserved]
operator+= global:[k_VectorSizeMax] call:[AddInReserved,Reserve,Size] noreturn:[AddInReserved]
operator[]
operator[]
Front call:[operator[]] noreturn:[operator[]]
Front call:[operator[]] noreturn:[operator[]]
Back call:[Back] noreturn:[Back]
Back call:[Back] noreturn:[Back]
MoveToFront call:[MoveToFront] noreturn:[MoveToFront]
Add call:[AddInReserved,ReserveOnePosition] noreturn:[AddInReserved]
AddInReserved call:[AddInReserved,CProperty] noreturn:[AddInReserved]
ReserveOnePosition call:[ReserveOnePosition] noreturn:[ReserveOnePosition]
AddInReserved_Ptr_of_new call:[AddInReserved] noreturn:[AddInReserved]
AddNew call:[AddInReserved,ReserveOnePosition]
AddNewInReserved call:[AddInReserved]
Insert call:[CProperty,InsertInReserved,ReserveOnePosition] noreturn:[InsertInReserved]
InsertNew call:[InsertInReserved,ReserveOnePosition]
CObjectVector < CProperty > call:[Size,delete]
ClearAndFree call:[Clear,ClearAndFree] noreturn:[ClearAndFree]
Clear call:[Clear,Size,delete] noreturn:[Clear]
DeleteFrom call:[DeleteFrom,Size,delete] noreturn:[DeleteFrom]
DeleteFrontal call:[DeleteFrontal,delete] noreturn:[DeleteFrontal]
DeleteBack call:[Back,DeleteBack,delete] noreturn:[DeleteBack]
Delete call:[Delete,delete] noreturn:[Delete]
FindInSorted call:[Compare,Size,return]
AddToUniqueSorted call:[Compare,Insert,Size]
Sort call:[Sort] noreturn:[Sort]
CompareObjectItems call:[Compare,return] noreturn:[Compare]
Sort call:[Sort] noreturn:[Sort]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < unsigned long long >
CRecordVector < unsigned long long > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < unsigned long long >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < unsigned int >
CRecordVector < unsigned int > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < unsigned int >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < void * >
CRecordVector < void * > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < void * >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
