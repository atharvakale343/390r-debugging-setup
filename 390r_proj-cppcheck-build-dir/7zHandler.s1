CBoolPair
Init
SetTrueTrue
SetVal_as_Defined
CUncopyable
operator== call:[sizeof]
operator!=
IUnknown
GetNumSystemThreads call:[return]
InitST
GetNumProcessThreads
CpuZero
CpuSet
IsCpuSet call:[return]
SetProcAffinity
IsPathSepar call:[return] noreturn:[return]
IsPathSepar call:[return] noreturn:[return]
MyStringLen
MyStringCopy
MyStpCpy
MyStringLen
MyStringCopy
MyStringCat call:[MyStringCopy,MyStringLen] noreturn:[MyStringCopy]
MyCharUpper_Ascii call:[return]
MyCharLower_Ascii call:[return]
MyCharLower_Ascii call:[return]
MyCharUpper call:[return,towupper] noreturn:[towupper]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
operator+ call:[AString] noreturn:[AString]
AString
Len
IsEmpty
Empty
operatorconstchar*
Ptr_non_const
Ptr
Ptr
RightPtr
Back
ReplaceOneCharAtPos
GetBuf
GetBuf call:[ReAlloc2] noreturn:[ReAlloc2]
GetBuf_SetEnd call:[ReAlloc2] noreturn:[ReAlloc2]
ReleaseBuf_SetLen
ReleaseBuf_SetEnd
ReleaseBuf_CalcLen call:[MyStringLen] noreturn:[MyStringLen]
operator+= call:[Grow_1] noreturn:[Grow_1]
Add_PathSepar call:[operator+=] noreturn:[operator+=]
Mid call:[AString] noreturn:[AString]
Left call:[AString] noreturn:[AString]
MakeLower_Ascii call:[MyStringLower_Ascii] noreturn:[MyStringLower_Ascii]
IsEqualTo call:[strcmp]
IsEqualTo_Ascii_NoCase call:[StringsAreEqualNoCase_Ascii] noreturn:[StringsAreEqualNoCase_Ascii]
IsPrefixedBy call:[IsString1PrefixedByString2] noreturn:[IsString1PrefixedByString2]
IsAscii call:[Len]
Find call:[FindCharPosInString] noreturn:[FindCharPosInString]
Find call:[FindCharPosInString]
ReverseFind_Dot call:[ReverseFind] noreturn:[ReverseFind]
Find call:[Find] noreturn:[Find]
Trim call:[TrimLeft,TrimRight] noreturn:[TrimLeft]
DeleteBack
DeleteFrom
Wipe_and_Empty call:[memset,sizeof]
AString_Wipe
AString_Wipe call:[Wipe_and_Empty] noreturn:[Wipe_and_Empty]
operator== call:[Len,strcmp]
operator== call:[strcmp]
operator== call:[strcmp]
operator!= call:[Len,strcmp]
operator!= call:[strcmp]
operator!= call:[strcmp]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
operator+ call:[UString] noreturn:[UString]
UString
Len
IsEmpty
Empty
operatorconstwchar_t*
Ptr_non_const
Ptr
Ptr
RightPtr
Back
ReplaceOneCharAtPos
GetBuf
GetBuf call:[ReAlloc2] noreturn:[ReAlloc2]
GetBuf_SetEnd call:[ReAlloc2] noreturn:[ReAlloc2]
ReleaseBuf_SetLen
ReleaseBuf_SetEnd
ReleaseBuf_CalcLen call:[MyStringLen] noreturn:[MyStringLen]
operator= call:[return]
operator= call:[Ptr,operator=] noreturn:[operator=]
operator+= call:[Grow_1] noreturn:[Grow_1]
operator+= call:[return]
Add_PathSepar call:[operator+=] noreturn:[operator+=]
operator+= call:[Ptr,operator+=] noreturn:[operator+=]
Mid call:[UString] noreturn:[UString]
Left call:[UString] noreturn:[UString]
MakeLower_Ascii call:[MyStringLower_Ascii] noreturn:[MyStringLower_Ascii]
IsEqualTo call:[StringsAreEqual_Ascii] noreturn:[StringsAreEqual_Ascii]
IsEqualTo_NoCase call:[StringsAreEqualNoCase] noreturn:[StringsAreEqualNoCase]
IsEqualTo_Ascii_NoCase call:[StringsAreEqualNoCase_Ascii] noreturn:[StringsAreEqualNoCase_Ascii]
Compare call:[wcscmp] noreturn:[wcscmp]
IsPrefixedBy call:[IsString1PrefixedByString2] noreturn:[IsString1PrefixedByString2]
IsPrefixedBy_NoCase call:[IsString1PrefixedByString2_NoCase] noreturn:[IsString1PrefixedByString2_NoCase]
IsAscii call:[Len]
Find call:[FindCharPosInString] noreturn:[FindCharPosInString]
Find call:[FindCharPosInString]
ReverseFind_Dot call:[ReverseFind] noreturn:[ReverseFind]
Find call:[Find] noreturn:[Find]
Trim call:[TrimLeft,TrimRight] noreturn:[TrimLeft]
DeleteBack
DeleteFrom
Wipe_and_Empty call:[memset,sizeof]
UString_Wipe
UString_Wipe call:[Wipe_and_Empty] noreturn:[Wipe_and_Empty]
operator== call:[Len,wcscmp]
operator== call:[wcscmp]
operator== call:[wcscmp]
operator!= call:[Len,wcscmp]
operator!= call:[wcscmp]
operator!= call:[wcscmp]
UString2
UString2
Len
IsEmpty
GetRawPtr
Compare call:[wcscmp] noreturn:[wcscmp]
GetBuf call:[ReAlloc2] noreturn:[ReAlloc2]
ReleaseBuf_SetLen
operator!=
operator!=
operator!=
StringToBstr call:[SysAllocString,return]
CMyComBSTR
CMyComBSTR call:[SysFreeString] noreturn:[SysFreeString]
operator&
operatorconstwchar_t*
Wipe_and_Free call:[Empty,SysStringLen,memset,sizeof] noreturn:[Empty]
CMyComBSTR call:[SysAllocString] noreturn:[SysAllocString]
operator= call:[SysAllocString,SysFreeString]
Len call:[SysStringLen] noreturn:[SysStringLen]
MyCopy call:[SysAllocStringLen,SysStringLen] noreturn:[SysAllocStringLen]
Empty call:[SysFreeString]
CMyComBSTR_Wipe
CMyComBSTR_Wipe call:[Wipe_and_Free] noreturn:[Wipe_and_Free]
CMyUnknownImp
CMyUnknownImp
MyMin
MyMax
MyCompare
BoolToInt call:[return] noreturn:[return]
BoolToUInt call:[return] noreturn:[return]
IntToBool call:[return] noreturn:[return]
BOOLToBool call:[return] noreturn:[return]
BoolToVARIANT_BOOL call:[return] noreturn:[return]
VARIANT_BOOLToBool call:[return] noreturn:[return]
PropVarEm_Set_UInt32
PropVarEm_Set_UInt64
PropVarEm_Set_FileTime64_Prec
PropVarEm_Set_Bool
CPropVariant
Set_FtPrec
SetAsTimeFrom_FT_Prec call:[Set_FtPrec,operator=] noreturn:[Set_FtPrec]
SetAsTimeFrom_Ft64_Prec call:[Set_FtPrec,operator=] noreturn:[Set_FtPrec]
SetAsTimeFrom_FT_Prec_Ns100 call:[operator=]
Get_Ns100
CPropVariant
CPropVariant
CPropVariant
CPropVariant
CPropVariant
operator= call:[return]
Calc_From_Val_Percents_Less100
ParseMtProp call:[ParseMtProp2] noreturn:[ParseMtProp2]
CProp
Clear call:[Clear] noreturn:[Clear]
AreThereNonOptionalProps call:[Size]
AddProp_Ascii call:[AddNew]
Get_NumThreads call:[FindProp,return]
Get_DicSize call:[FindProp]
Get_Lzma_Algo call:[FindProp,GetLevel]
Get_Lzma_DicSize call:[GetLevel,Get_DicSize]
Get_Lzma_MatchFinder_IsBt call:[FindProp,GetLevel,return] noreturn:[return]
Get_Lzma_Eos call:[FindProp,VARIANT_BOOLToBool] noreturn:[VARIANT_BOOLToBool]
Are_Lzma_Model_Props_Defined call:[FindProp]
Get_Lzma_NumThreads call:[Get_Lzma_Algo,Get_NumThreads]
Get_Xz_NumThreads call:[Get_Lzma_Algo,Get_NumThreads]
GetProp_BlockSize call:[FindProp]
Get_Xz_BlockSize call:[GetProp_BlockSize,Get_Lzma_DicSize,MyMax,MyMin]
Get_BZip2_NumThreads call:[Get_NumThreads,return]
Get_BZip2_BlockSize call:[FindProp,GetLevel]
Get_Ppmd_MemSize call:[FindProp,GetLevel]
AddProp_Level call:[AddProp32] noreturn:[AddProp32]
AddProp_NumThreads call:[AddProp32] noreturn:[AddProp32]
AddProp_EndMarker_if_NotFound call:[AddPropBool,FindProp] noreturn:[AddPropBool]
AddProp_BlockSize2 call:[AddNew,FindProp]
Clear call:[Clear,Empty] noreturn:[Empty]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
InitCommon call:[Calc_From_Val_Percents_Less100,GetNumberOfProcessors,GetRamSize,sizeof]
CCommonMethodProps call:[InitCommon] noreturn:[InitCommon]
GetNumEmptyMethods call:[IsEmpty,Size]
GetLevel
GetAnalysisLevel
CMultiMethodProps call:[InitMulti] noreturn:[InitMulti]
InitSingle
CSingleMethodProps call:[InitSingle] noreturn:[InitSingle]
GetLevel
Init call:[Init]
CHandlerTimeOptions call:[Init] noreturn:[Init]
CMethodFull
IsSimpleCoder
IsThereBond_to_Coder call:[Size]
IsEmpty call:[IsEmpty,return] noreturn:[return]
CCompressionMethodMode
CCompressionMethodMode call:[Wipe_and_Empty] noreturn:[Wipe_and_Empty]
CSystemException
CInBufferException
GetStreamSize
GetProcessedSize
WasFinished
SetStream
SetBuf
ReadByte call:[ReadByte_FromNewBlock] noreturn:[ReadByte_FromNewBlock]
ReadByte_FromBuf
ReadByte call:[ReadByte_FromNewBlock] noreturn:[ReadByte_FromNewBlock]
CInBuffer call:[Free] noreturn:[Free]
operator== call:[Size,memcmp,sizeof]
operator!= call:[Size,memcmp,sizeof]
CByteBuffer_Wipe
CByteBuffer_Wipe call:[Wipe] noreturn:[Wipe]
IsFilterMethod
IsSimpleCoder
CFolder
IsDecodingSupported call:[Size]
Find_in_PackStreams call:[Size,return]
FindBond_for_PackStream call:[Size,return]
IsEncrypted call:[Size]
ClearAndSetSize call:[ClearAndSetSize] noreturn:[ClearAndSetSize]
Clear call:[Clear] noreturn:[Clear]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
GetItem call:[Size]
ValidAndDefined call:[Size]
CheckSize call:[Size]
Clear call:[Clear] noreturn:[Clear]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
GetItem call:[Size]
CheckSize call:[Size]
CParsedMethods
ParseFolderEx call:[ParseFolderInfo]
GetNumFolderUnpackSizes call:[return]
GetFolderUnpackSize
GetStreamPackSize
CFolders
Clear call:[Clear,Free] noreturn:[Free]
Clear call:[Clear,Free] noreturn:[Clear]
IsSolid
IsItemAnti call:[Size,return] noreturn:[return]
Clear call:[Clear] noreturn:[Clear]
Clear call:[Clear,Free]
CanUpdate
GetFolderStreamPos
GetFolderFullPackSize
GetFolderPackStreamSize
GetFilePackSize call:[GetFolderFullPackSize] noreturn:[GetFolderFullPackSize]
GetRem
GetPtr
Init
SkipDataNoCheck
SkipRem
DeleteByteStream
ReadBytes call:[ReadBytes] noreturn:[ReadBytes]
ReadByte call:[ReadByte] noreturn:[ReadByte]
ReadNumber call:[ReadNumber] noreturn:[ReadNumber]
ReadNum call:[ReadNum] noreturn:[ReadNum]
ReadID call:[ReadNumber] noreturn:[ReadNumber]
ReadUInt32 call:[ReadUInt32] noreturn:[ReadUInt32]
ReadUInt64 call:[ReadUInt64] noreturn:[ReadUInt64]
SkipData call:[SkipData] noreturn:[SkipData]
SkipData call:[SkipData] noreturn:[SkipData]
CInArchive
InitSolidFiles
InitSolidSize
InitSolid call:[InitSolidFiles,InitSolidSize]
COutHandler call:[InitProps7z] noreturn:[InitProps7z]
QueryInterface global:[IID_IArchiveGetRawProps,IID_IInArchive,IID_IOutArchive,IID_ISetProperties,IID_IUnknown] call:[return] noreturn:[return]
AddRef
Release
CHandler call:[Close] noreturn:[Close]
CHandler
GetNumberOfItems call:[Size,return] noreturn:[return]
GetNumberOfArchiveProperties call:[return,sizeof] noreturn:[return]
GetArchivePropertyInfo global:[k7z_PROPID_To_VARTYPE] call:[return,sizeof] noreturn:[return]
GetHex call:[return]
ConvertMethodIdToString_Back call:[GetHex,return,while]
ConvertMethodIdToString call:[ConvertMethodIdToString_Back] noreturn:[ConvertMethodIdToString_Back]
GetStringForSizeValue call:[ConvertUInt32ToString]
GetLzma2String call:[ConvertUInt32ToString] noreturn:[ConvertUInt32ToString]
AddProp32 call:[ConvertUInt32ToString,MyStpCpy] noreturn:[ConvertUInt32ToString]
AddMethodName call:[ConvertMethodIdToString,FindMethod,IsEmpty] noreturn:[ConvertMethodIdToString]
GetArchiveProperty global:[kpv_ErrorFlags_HeadersError,kpv_ErrorFlags_IsNotArc,kpv_ErrorFlags_UnexpectedEnd,kpv_ErrorFlags_UnsupportedFeature] call:[AddMethodName,Add_Space_if_NotEmpty,CanUpdate,Detach,GetLzma2String,GetStringForSizeValue,IsSolid,Size,return] noreturn:[AddMethodName,Detach,return]
SetFileTimeProp_From_UInt64Def call:[GetItem,PropVarEm_Set_FileTime64_Prec] noreturn:[PropVarEm_Set_FileTime64_Prec]
IsFolderEncrypted call:[GetPtr,Init,ReadByte,ReadNum,SkipDataNoCheck] noreturn:[SkipDataNoCheck]
GetNumRawProps call:[return] noreturn:[return]
GetRawPropInfo call:[return] noreturn:[return]
GetParent call:[return] noreturn:[return]
GetRawProp call:[return] noreturn:[return]
SetMethodToProp call:[AddProp32,ConvertMethodIdToString_Back,ConvertUInt32ToString,FindMethod,GetLzma2String,GetPtr,GetStringForSizeValue,Init,IsEmpty,Len,MyStpCpy,MyStringCopy,MyStringLen,PropVarEm_Set_Str,PropVariant_Clear,ReadByte,ReadNum,SkipDataNoCheck,return] noreturn:[AddProp32,ConvertMethodIdToString_Back,ConvertUInt32ToString,GetLzma2String,GetStringForSizeValue,MyStringCopy,PropVarEm_Set_Str,ReadNum,SkipDataNoCheck,return]
GetProperty call:[GetFolderFullPackSize,GetItem,GetPath_Prop,IsFolderEncrypted,IsItemAnti,PropVarEm_Set_Bool,PropVarEm_Set_UInt32,PropVarEm_Set_UInt64,PropVariant_Clear,SetFileTimeProp_From_UInt64Def,SetMethodToProp,ValidAndDefined,return] noreturn:[PropVarEm_Set_UInt32,PropVarEm_Set_UInt64,return]
Open global:[IID_ICryptoGetTextPassword] call:[Clear,Close,FillPopIDs,Open,QueryInterface,ReadDatabase,archive,return] noreturn:[QueryInterface,return]
Close call:[Clear,Release,Wipe_and_Empty,return] noreturn:[return]
Free
CObjArray2 < CCoderInfo >
CObjArray2 < CCoderInfo >
operatorT*
operatorconstT*
Size call:[return]
IsEmpty
SetSize
Free
CObjArray2 < CBond >
CObjArray2 < CBond >
operatorT*
operatorconstT*
Size call:[return]
IsEmpty
SetSize
Free
CObjArray2 < unsigned int >
CObjArray2 < unsigned int >
operatorT*
operatorconstT*
Size call:[return]
IsEmpty
SetSize
Free
CObjArray < unsigned long long >
CObjArray < unsigned long long >
CObjArray < unsigned long long >
operatorT*
operatorconstT*
Alloc
Free
CObjArray < unsigned int >
CObjArray < unsigned int >
CObjArray < unsigned int >
operatorT*
operatorconstT*
Alloc
Free
CObjArray < unsigned char >
CObjArray < unsigned char >
CObjArray < unsigned char >
operatorT*
operatorconstT*
Alloc
Free
CBuffer < unsigned char >
CBuffer < unsigned char >
CBuffer < unsigned char > call:[memcpy,sizeof]
CBuffer < unsigned char >
operatorT*
operatorconstT*
Size
Alloc call:[Free]
AllocAtLeast call:[Free]
CopyFrom call:[Alloc,memcpy,sizeof] noreturn:[memcpy]
ChangeSize_KeepData call:[MyMin,memcpy,sizeof] noreturn:[memcpy]
Wipe call:[memset,sizeof] noreturn:[memset]
operator= call:[CopyFrom] noreturn:[CopyFrom]
CMyComPtr < ICompressCoder >
CMyComPtr < ICompressCoder > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressCoder2 >
CMyComPtr < ICompressCoder2 > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder2 > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressCoder2 > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICompressFilter >
CMyComPtr < ICompressFilter > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressFilter > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICompressFilter > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < IHasher >
CMyComPtr < IHasher > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IHasher > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IHasher > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < IInStream >
CMyComPtr < IInStream > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IInStream > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IInStream > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < IArchiveOpenCallback >
CMyComPtr < IArchiveOpenCallback > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IArchiveOpenCallback > call:[AddRef] noreturn:[AddRef]
CMyComPtr < IArchiveOpenCallback > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
CMyComPtr < ICryptoGetTextPassword >
CMyComPtr < ICryptoGetTextPassword > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICryptoGetTextPassword > call:[AddRef] noreturn:[AddRef]
CMyComPtr < ICryptoGetTextPassword > call:[Release] noreturn:[Release]
Release call:[Release]
operatorT* call:[return]
operator&
operator.
operator= call:[AddRef,Release] noreturn:[AddRef,Release]
operator= call:[return] noreturn:[return]
operator! call:[return] noreturn:[return]
Attach call:[Release]
Detach
QueryInterface call:[QueryInterface] noreturn:[QueryInterface]
Size call:[Size] noreturn:[Size]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
ClearAndReserve call:[Clear,ClearAndReserve] noreturn:[ClearAndReserve]
CObjectVector < CProp >
CObjectVector < CProp > call:[AddInReserved,ConstructReserve,Size] noreturn:[AddInReserved]
operator= call:[AddInReserved,Clear,Reserve,Size] noreturn:[AddInReserved]
operator+= global:[k_VectorSizeMax] call:[AddInReserved,Reserve,Size] noreturn:[AddInReserved]
operator[]
operator[]
Front call:[operator[]] noreturn:[operator[]]
Front call:[operator[]] noreturn:[operator[]]
Back call:[Back] noreturn:[Back]
Back call:[Back] noreturn:[Back]
MoveToFront call:[MoveToFront] noreturn:[MoveToFront]
Add call:[AddInReserved,ReserveOnePosition] noreturn:[AddInReserved]
AddInReserved call:[AddInReserved,CProp] noreturn:[AddInReserved]
ReserveOnePosition call:[ReserveOnePosition] noreturn:[ReserveOnePosition]
AddInReserved_Ptr_of_new call:[AddInReserved] noreturn:[AddInReserved]
AddNew call:[AddInReserved,ReserveOnePosition]
AddNewInReserved call:[AddInReserved]
Insert call:[CProp,InsertInReserved,ReserveOnePosition] noreturn:[InsertInReserved]
InsertNew call:[InsertInReserved,ReserveOnePosition]
CObjectVector < CProp > call:[Size,delete]
ClearAndFree call:[Clear,ClearAndFree] noreturn:[ClearAndFree]
Clear call:[Clear,Size,delete] noreturn:[Clear]
DeleteFrom call:[DeleteFrom,Size,delete] noreturn:[DeleteFrom]
DeleteFrontal call:[DeleteFrontal,delete] noreturn:[DeleteFrontal]
DeleteBack call:[Back,DeleteBack,delete] noreturn:[DeleteBack]
Delete call:[Delete,delete] noreturn:[Delete]
FindInSorted call:[Compare,Size,return]
AddToUniqueSorted call:[Compare,Insert,Size]
Sort call:[Sort] noreturn:[Sort]
CompareObjectItems call:[Compare,return] noreturn:[Compare]
Sort call:[Sort] noreturn:[Sort]
Size call:[Size] noreturn:[Size]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
ClearAndReserve call:[Clear,ClearAndReserve] noreturn:[ClearAndReserve]
CObjectVector < COneMethodInfo >
CObjectVector < COneMethodInfo > call:[AddInReserved,ConstructReserve,Size] noreturn:[AddInReserved]
operator= call:[AddInReserved,Clear,Reserve,Size] noreturn:[AddInReserved]
operator+= global:[k_VectorSizeMax] call:[AddInReserved,Reserve,Size] noreturn:[AddInReserved]
operator[]
operator[]
Front call:[operator[]] noreturn:[operator[]]
Front call:[operator[]] noreturn:[operator[]]
Back call:[Back] noreturn:[Back]
Back call:[Back] noreturn:[Back]
MoveToFront call:[MoveToFront] noreturn:[MoveToFront]
Add call:[AddInReserved,ReserveOnePosition] noreturn:[AddInReserved]
AddInReserved call:[AddInReserved,COneMethodInfo] noreturn:[AddInReserved]
ReserveOnePosition call:[ReserveOnePosition] noreturn:[ReserveOnePosition]
AddInReserved_Ptr_of_new call:[AddInReserved] noreturn:[AddInReserved]
AddNew call:[AddInReserved,ReserveOnePosition]
AddNewInReserved call:[AddInReserved]
Insert call:[COneMethodInfo,InsertInReserved,ReserveOnePosition] noreturn:[InsertInReserved]
InsertNew call:[InsertInReserved,ReserveOnePosition]
CObjectVector < COneMethodInfo > call:[Size,delete]
ClearAndFree call:[Clear,ClearAndFree] noreturn:[ClearAndFree]
Clear call:[Clear,Size,delete] noreturn:[Clear]
DeleteFrom call:[DeleteFrom,Size,delete] noreturn:[DeleteFrom]
DeleteFrontal call:[DeleteFrontal,delete] noreturn:[DeleteFrontal]
DeleteBack call:[Back,DeleteBack,delete] noreturn:[DeleteBack]
Delete call:[Delete,delete] noreturn:[Delete]
FindInSorted call:[Compare,Size,return]
AddToUniqueSorted call:[Compare,Insert,Size]
Sort call:[Sort] noreturn:[Sort]
CompareObjectItems call:[Compare,return] noreturn:[Compare]
Sort call:[Sort] noreturn:[Sort]
Size call:[Size] noreturn:[Size]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
ClearAndReserve call:[Clear,ClearAndReserve] noreturn:[ClearAndReserve]
CObjectVector < CMethodFull >
CObjectVector < CMethodFull > call:[AddInReserved,ConstructReserve,Size] noreturn:[AddInReserved]
operator= call:[AddInReserved,Clear,Reserve,Size] noreturn:[AddInReserved]
operator+= global:[k_VectorSizeMax] call:[AddInReserved,Reserve,Size] noreturn:[AddInReserved]
operator[]
operator[]
Front call:[operator[]] noreturn:[operator[]]
Front call:[operator[]] noreturn:[operator[]]
Back call:[Back] noreturn:[Back]
Back call:[Back] noreturn:[Back]
MoveToFront call:[MoveToFront] noreturn:[MoveToFront]
Add call:[AddInReserved,ReserveOnePosition] noreturn:[AddInReserved]
AddInReserved call:[AddInReserved,CMethodFull] noreturn:[AddInReserved]
ReserveOnePosition call:[ReserveOnePosition] noreturn:[ReserveOnePosition]
AddInReserved_Ptr_of_new call:[AddInReserved] noreturn:[AddInReserved]
AddNew call:[AddInReserved,ReserveOnePosition]
AddNewInReserved call:[AddInReserved]
Insert call:[CMethodFull,InsertInReserved,ReserveOnePosition] noreturn:[InsertInReserved]
InsertNew call:[InsertInReserved,ReserveOnePosition]
CObjectVector < CMethodFull > call:[Size,delete]
ClearAndFree call:[Clear,ClearAndFree] noreturn:[ClearAndFree]
Clear call:[Clear,Size,delete] noreturn:[Clear]
DeleteFrom call:[DeleteFrom,Size,delete] noreturn:[DeleteFrom]
DeleteFrontal call:[DeleteFrontal,delete] noreturn:[DeleteFrontal]
DeleteBack call:[Back,DeleteBack,delete] noreturn:[DeleteBack]
Delete call:[Delete,delete] noreturn:[Delete]
FindInSorted call:[Compare,Size,return]
AddToUniqueSorted call:[Compare,Insert,Size]
Sort call:[Sort] noreturn:[Sort]
CompareObjectItems call:[Compare,return] noreturn:[Compare]
Sort call:[Sort] noreturn:[Sort]
Size call:[Size] noreturn:[Size]
IsEmpty call:[IsEmpty] noreturn:[IsEmpty]
ReserveDown call:[ReserveDown] noreturn:[ReserveDown]
ClearAndReserve call:[Clear,ClearAndReserve] noreturn:[ClearAndReserve]
CObjectVector < CBuffer < unsigned char > >
CObjectVector < CBuffer < unsigned char > > call:[AddInReserved,ConstructReserve,Size] noreturn:[AddInReserved]
operator= call:[AddInReserved,Clear,Reserve,Size] noreturn:[AddInReserved]
operator+= global:[k_VectorSizeMax] call:[AddInReserved,Reserve,Size] noreturn:[AddInReserved]
operator[]
operator[]
Front call:[operator[]] noreturn:[operator[]]
Front call:[operator[]] noreturn:[operator[]]
Back call:[Back] noreturn:[Back]
Back call:[Back] noreturn:[Back]
MoveToFront call:[MoveToFront] noreturn:[MoveToFront]
Add call:[AddInReserved,ReserveOnePosition] noreturn:[AddInReserved]
AddInReserved call:[AddInReserved,CBuffer < unsigned char >] noreturn:[AddInReserved]
ReserveOnePosition call:[ReserveOnePosition] noreturn:[ReserveOnePosition]
AddInReserved_Ptr_of_new call:[AddInReserved] noreturn:[AddInReserved]
AddNew call:[AddInReserved,ReserveOnePosition]
AddNewInReserved call:[AddInReserved]
Insert call:[CBuffer < unsigned char >,InsertInReserved,ReserveOnePosition] noreturn:[InsertInReserved]
InsertNew call:[InsertInReserved,ReserveOnePosition]
CObjectVector < CBuffer < unsigned char > > call:[Size,delete]
ClearAndFree call:[Clear,ClearAndFree] noreturn:[ClearAndFree]
Clear call:[Clear,Size,delete] noreturn:[Clear]
DeleteFrom call:[DeleteFrom,Size,delete] noreturn:[DeleteFrom]
DeleteFrontal call:[DeleteFrontal,delete] noreturn:[DeleteFrontal]
DeleteBack call:[Back,DeleteBack,delete] noreturn:[DeleteBack]
Delete call:[Delete,delete] noreturn:[Delete]
FindInSorted call:[Compare,Size,return]
AddToUniqueSorted call:[Compare,Insert,Size]
Sort call:[Sort] noreturn:[Sort]
CompareObjectItems call:[Compare,return] noreturn:[Compare]
Sort call:[Sort] noreturn:[Sort]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < unsigned long long >
CRecordVector < unsigned long long > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < unsigned long long >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < CBond2 >
CRecordVector < CBond2 > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < CBond2 >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < bool >
CRecordVector < bool > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < bool >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < unsigned int >
CRecordVector < unsigned int > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < unsigned int >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < CFileItem >
CRecordVector < CFileItem > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < CFileItem >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
MoveItems call:[memmove,sizeof] noreturn:[memmove]
ReAllocForNewCapacity call:[memcpy,sizeof] noreturn:[memcpy]
ReserveOnePosition global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
CRecordVector < void * >
CRecordVector < void * > call:[Size,memcpy,sizeof] noreturn:[memcpy]
Size
IsEmpty
ConstructReserve
Reserve global:[k_VectorSizeMax] call:[ReAllocForNewCapacity] noreturn:[ReAllocForNewCapacity]
ChangeSize_KeepData call:[Reserve]
ClearAndReserve global:[k_VectorSizeMax] call:[Clear]
ClearAndSetSize call:[ClearAndReserve]
ReserveDown call:[memcpy,sizeof] noreturn:[memcpy]
CRecordVector < void * >
ClearAndFree
Clear
DeleteBack
DeleteFrom
DeleteFrontal call:[MoveItems]
Delete call:[MoveItems]
operator= call:[Size,memcpy,sizeof] noreturn:[memcpy]
operator+= global:[k_VectorSizeMax] call:[Reserve,Size,memcpy,sizeof]
Add call:[ReserveOnePosition]
AddInReserved
Insert call:[MoveItems,ReserveOnePosition]
InsertInReserved call:[MoveItems]
MoveToFront call:[memmove,sizeof]
operator[]
operator[]
Front
Front
Back
Back
FindInSorted call:[return]
FindInSorted2 call:[Compare,return]
FindInSorted call:[FindInSorted] noreturn:[FindInSorted]
FindInSorted2 call:[FindInSorted2] noreturn:[FindInSorted2]
AddToUniqueSorted call:[Insert]
AddToUniqueSorted2 call:[Compare,Insert]
SortRefDown call:[compare]
Sort call:[Front,SortRefDown,while] noreturn:[SortRefDown,while]
SortRefDown2 call:[Compare]
Sort2 call:[Front,SortRefDown2,while] noreturn:[SortRefDown2,while]
